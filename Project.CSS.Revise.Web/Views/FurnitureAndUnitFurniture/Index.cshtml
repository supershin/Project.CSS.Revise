@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutSite.cshtml";
    var buList = ViewBag.listBu as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var funitureList = ViewBag.ListFuniture as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
}
<div class="container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col-6">
                <h4>Furniture & Unit Furniture</h4>
            </div>
            <div class="col-6">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="index.html">
                            <svg class="stroke-icon">
                                <use xlink:href="@Url.Content("~/assets/svg/icon-sprite.svg#stroke-home")"></use>
                            </svg>
                        </a>
                    </li>
                    <li class="breadcrumb-item">Pages</li>
                    <li class="breadcrumb-item active">Furniture & Unit Furniture</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <h6 class="mb-0">Filter</h6>

                    <!-- Show on ALL sizes; toggles collapse -->
                    <button type="button"
                            id="btnToggleFilters"
                            class="btn btn-sm btn-outline-secondary d-inline-flex align-items-center gap-1"
                            data-bs-toggle="collapse"
                            data-bs-target="#filterBody"
                            aria-expanded="true"
                            aria-controls="filterBody">
                        ตัวกรอง
                        <i class="bi bi-chevron-up" id="filterChevron"></i>
                    </button>
                </div>

                <!-- 👇 Use Bootstrap collapse (visible by default with .show) -->
                <div id="filterBody" class="card-body collapse show">
                    <form id="filterForm">
                        <div class="row g-3 align-items-end">
                            <!-- BU -->
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label fw-semibold" for="ddl_Bu">BUG</label>
                                <select class="form-select" id="ddl_Bu" multiple>
                                    @foreach (var bu in buList)
                                    {
                                        var val = (bu.ID ?? bu.ValueInt ?? bu.Value ?? "").ToString();
                                        var text = (bu.Name ?? bu.Text ?? "").ToString();
                                        <option value="@val">@text</option>
                                    }
                                </select>
                            </div>

                            <!-- Project -->
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label fw-semibold" for="ddl_project">โครงการ</label>
                                <select id="ddl_project" class="form-select">
                                    <option value="" selected disabled>— เลือก project —</option>
                                </select>
                            </div>

                            <!-- Unit Type -->
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label fw-semibold" for="ddl_unittype">Unit Type</label>
                                <select id="ddl_unittype" class="form-select" multiple>
                                    <option value="" selected disabled>— เลือก Unit Type —</option>
                                </select>
                            </div>

                            <!-- Unit search text -->
                            <div class="col-12 col-md-6 col-lg-3">
                                <label for="txtSearchName" class="form-label fw-semibold">Unit</label>
                                <input type="text" id="txtSearchName" class="form-control form-control-lg" placeholder="🔍 พิมพ์ Unit">
                            </div>
                        </div>

                        <!-- Buttons row -->
                        <div class="row mt-3">
                            <div class="col-12 d-flex gap-2 justify-content-between justify-content-lg-end">
                                <button type="button" id="btnClear" class="btn btn-outline-secondary">ล้างค่า</button>
                                <button type="button" id="btnSearch" class="btn btn-primary">ค้นหา</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-12">
            <div class="row g-3">
                <div class="col-12 col-lg-4">
                    <div class="card shadow-sm">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <div>
                                <h6 class="mb-0">Furnitures</h6>
                                <small class="text-muted">
                                    ทั้งหมด @ViewBag.FurnitureCount รายการ
                                </small>
                            </div>
                            <div class="btn-group">
                                <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#mdlFurnitureAdd">
                                    <i class="bi bi-plus-lg"></i> Add
                                </button>
                            </div>
                        </div>
                        <div class="card-body pt-2">
                            <!-- ✅ Check All -->
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="chkAllFurnitures" style="border: 2px solid grey; accent-color: #0d6efd;" />
                                <label class="form-check-label fw-semibold" for="chkAllFurnitures">
                                    เลือกทั้งหมด
                                </label>
                            </div>

                            <div id="furnitureList" class="list-group" style="height:300px;overflow-y:auto;">
                                @foreach (var f in funitureList)
                                {
                                    var text = f.Text.ToString();
                                    var val = f.ValueInt.ToString();

                                    <div class="list-group-item d-flex justify-content-between align-items-center" data-id="@val" data-name="@text">
                                        <div class="d-flex align-items-center gap-2">
                                            <!-- ✅ Checkbox -->
                                            <input type="checkbox" class="form-check-input chkFurniture" value="@val" style="border: 2px solid grey; accent-color: #0d6efd;" />
                                            <span>@text</span>
                                        </div>

                                        <div class="btn-group">
                                            <button type="button" class="btn btn-light rounded-circle btn-icon" title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            &nbsp;
                                            <button type="button" class="btn btn-light rounded-circle btn-icon text-danger" title="Delete">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-12 col-lg-8">
                    <div class="card shadow-sm">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-baseline gap-2">
                                <h6 class="mb-0">Unit Furniture</h6>
                                <small class="text-muted" id="uf_count"></small>

                                <!-- show selected project name after Search -->
                                <span class="ms-3 small">
                                    <span class="text-muted">Project:</span>
                                    <span id="uf_project_name" class="fw-semibold"></span>
                                </span>

                                <!-- keep project id for saving -->
                                <input type="hidden" id="hfProjectID" value="" />
                            </div>


                            <div class="btn-group">
                                <button class="btn btn-sm btn-outline-primary" id="btnSaveMapping">
                                    <i class="bi bi-save"></i> Save Mapping
                                </button>
                            </div>
                        </div>

                        <div class="card-body p-0">
                            <div class="table-responsive uf-scroll">
                                <table class="table table-sm table-hover align-middle mb-0 w-100">
                                    <colgroup>
                                        <col class="col-check">
                                        <col> <!-- Unit Code -->
                                        <col class="col-unittype"> <!-- Unit Type -->
                                        <col class="col-qty"> <!-- Furniture Qty -->
                                        <col> <!-- Check Status -->
                                        <col> <!-- Update By -->
                                        <col class="col-date"> <!-- Update Date -->
                                    </colgroup>

                                    <thead class="table-light">
                                        <tr>
                                            <th style="white-space:nowrap;">
                                                <input class="form-check-input" type="checkbox" id="chkAllUnit" style="border: 2px solid grey; accent-color: #0d6efd;" />
                                            </th>
                                            <th>Unit Code</th>
                                            <th>Unit Type</th>
                                            <th>Furniture Qty</th>
                                            <th>Check Status</th>
                                            <th>Update By</th>
                                            <th style="white-space:nowrap;">Update Date</th>
                                        </tr>
                                    </thead>

                                    <tbody id="tblUnitFurnitureBody">
                                        <!-- rows injected by JS -->
                                    </tbody>
                                </table>
                            </div>

                            <!-- empty state -->
                            <div id="uf_empty" class="text-center text-muted py-4 d-none">— No data —</div>

                            <!-- loading -->
                            <div id="uf_loading" class="text-center py-4 d-none">
                                <div class="spinner-border spinner-border-sm" role="status"></div>
                                <div class="small text-muted mt-2">Loading…</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Mapping Stepper Modal -->
<div class="modal fade" id="mdlMapWizard" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModal" aria-hidden="true" data-bs-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    บันทึก Mapping (2 ขั้นตอน)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>

            <!-- Stepper header -->
            <div class="px-3 pt-3">
                <ol class="stepper mb-0">
                    <li id="stp1" class="active">
                        <span class="circle">1</span>
                        <span class="label" style="color:#000;">กำหนด QTY Furniture</span>
                    </li>
                    <li id="stp2">
                        <span class="circle">2</span>
                        <span class="label" style=" color:#000;">ตรวจสอบ Unit ที่เลือก</span>
                    </li>
                </ol>
            </div>

            <div class="modal-body">
                <!-- STEP 1: Furnitures + QTY -->
                <div id="stepPane1">
                    <div class="card border-0">
                        <div class="card-header bg-light py-2 d-flex justify-content-between align-items-center">
                            <strong style="color:#000; font-weight:600;">Furnitures ที่เลือก</strong>
                            <small class="text-muted"><span id="cntFurnSel">0</span> รายการ</small>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive" style="max-height:55vh;">
                                <table class="table table-sm align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th style="width:60px;" class="text-center">#</th>
                                            <th>Furniture</th>
                                            <th style="width:160px;" class="text-end pe-3">QTY</th>
                                            <th style="width:80px;" class="text-center">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="mw_furnBody"><!-- rows by JS --></tbody>
                                </table>
                            </div>
                            <div id="mw_furnEmpty" class="text-center text-muted py-4 d-none">— ยังไม่ได้เลือก Furniture —</div>
                        </div>
                    </div>
                </div>

                <!-- STEP 2: Units -->
                <div id="stepPane2" class="d-none">
                    <div class="card border-0">
                        <div class="card-header bg-light py-2 d-flex justify-content-between align-items-center">
                            <strong style="color:#000; font-weight:600;">Unit ที่เลือก</strong>
                            <small class="text-muted"><span id="cntUnitSel">0</span> รายการ</small>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive" style="max-height:55vh;">
                                <table class="table table-sm align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th style="width:60px;" class="text-center">#</th>
                                            <th>Unit Code</th>
                                            <th>Unit Type</th>
                                            <th style="width:80px;" class="text-center">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="mw_unitBody"><!-- rows by JS --></tbody>
                                </table>
                            </div>
                            <div id="mw_unitEmpty" class="text-center text-muted py-4 d-none">— ยังไม่ได้เลือก Unit —</div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary d-none" id="btnMWBack">ย้อนกลับ</button>
                <button type="button" class="btn btn-primary" id="btnMWNext">ถัดไป</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Unit Furniture (Modern DnD Mockup with Styled Cards) -->
<div class="modal fade" id="mdlEditUnitFurniture" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content border-0 shadow-lg rounded-4 overflow-hidden">

            <!-- Header -->
            <div class="modal-header bg-light border-0 py-3">
                <div class="d-flex flex-column">
                    <h5 class="modal-title fw-semibold">Edit Unit Furniture</h5>
                    <div class="d-flex flex-wrap align-items-center gap-2 mt-1">
                        <span class="chip chip-muted" id="edit_project_name">Project Name</span>
                        <span class="chip chip-primary">
                            <i class="bi bi-hash me-1"></i>
                            <span id="edit_unit_code">A-101</span>
                        </span>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Body -->
            <div class="modal-body p-0">

                <!-- Catalog (drag from here) -->
                <div class="px-4 pt-4 pb-3 border-bottom bg-white">
                    <div class="d-flex align-items-center justify-content-between mb-2">
                        <label class="form-label mb-0 small text-muted">Catalog — drag into “Unit items”</label>
                        <div class="input-group input-group-sm" style="max-width:260px;">
                            <span class="input-group-text bg-white"><i class="bi bi-search"></i></span>
                            <input type="text" class="form-control" id="mf_search" placeholder="Search furniture…">
                        </div>
                    </div>
                    <div id="mf_catalog" class="d-flex gap-2 flex-wrap">
                        <div class="chip chip-ghost dnd-src" draggable="true" data-id="101" data-name="Sofa 2-seat">Sofa 2-seat</div>
                        <div class="chip chip-ghost dnd-src" draggable="true" data-id="102" data-name="Coffee Table">Coffee Table</div>
                        <div class="chip chip-ghost dnd-src" draggable="true" data-id="103" data-name="TV Stand">TV Stand</div>
                        <div class="chip chip-ghost dnd-src" draggable="true" data-id="104" data-name="Dining Set">Dining Set</div>
                        <div class="chip chip-ghost dnd-src" draggable="true" data-id="105" data-name="Wardrobe">Wardrobe</div>
                    </div>
                </div>

                <!-- Content -->
                <div class="row g-0">
                    <!-- Left: Unit items -->
                    <div class="col-12 col-xl-8 border-end">
                        <div class="p-4">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="mb-0">Unit items</h6>
                                <small class="text-muted">Drag to add / reorder</small>
                            </div>

                            <!-- Dropzone with list-style cards -->
                            <div id="unitDeck"
                                 class="dnd-dropzone list-group"
                                 style="min-height: 160px; border:1px dashed #dee2e6; border-radius:.5rem;">

                                <!-- Example row -->
                                <div class="list-group-item d-flex align-items-center justify-content-between gap-3 dnd-item" data-id="101">
                                    <div class="d-flex align-items-center gap-2 flex-grow-1">
                                        <i class="bi bi-couch text-secondary"></i>
                                        <span class="fw-semibold">Sofa 2-seat</span>
                                    </div>
                                    <div class="d-flex align-items-center gap-2">
                                        <input type="number" class="form-control form-control-sm qty-input" min="0" step="1" value="1">
                                        <button class="btn btn-light btn-sm dnd-remove" title="Remove">
                                            <i class="bi bi-trash text-danger"></i>
                                        </button>
                                    </div>
                                </div>

                            </div>

                            <style>
                                #unitDeck .list-group-item {
                                    border: 1px solid #e9ecef;
                                    border-radius: .5rem;
                                    padding: .5rem .75rem;
                                    margin-bottom: .5rem;
                                    transition: background .2s, transform .2s;
                                    cursor: grab;
                                }

                                    #unitDeck .list-group-item:hover {
                                        background: #f8f9fa;
                                        transform: translateY(-1px);
                                    }

                                #unitDeck .fw-semibold {
                                    font-size: .95rem;
                                    color: #212529;
                                }

                                .qty-input {
                                    width: 80px;
                                }

                                .dnd-remove {
                                    border-radius: 50%;
                                    padding: .25rem .45rem;
                                }

                                .dnd-dropzone.dragover {
                                    background: rgba(13,110,253,.06);
                                }
                            </style>


                            <div class="text-center text-muted py-4 d-none" id="mf_empty">— No furniture —</div>
                        </div>
                    </div>

                    <!-- Right: Remark / Totals -->
                    <div class="col-12 col-xl-4">
                        <div class="p-4">
                            <label class="form-label fw-semibold">Remark</label>
                            <textarea class="form-control" id="mf_remark" rows="6" placeholder="Add a note for this unit…"></textarea>

                            <hr class="my-4">

                            <div class="d-flex flex-column gap-2 small">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Total items</span>
                                    <span class="fw-semibold" id="mf_total_items">0</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Total quantity</span>
                                    <span class="fw-semibold" id="mf_total_qty">0</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!-- /row -->
            </div>

            <!-- Footer -->
            <div class="modal-footer bg-light border-0 py-3">
                <input type="hidden" id="edit_unit_id" value="">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="btnEditUFSave">
                    <i class="bi bi-save me-1"></i> Save
                </button>
            </div>

        </div>
    </div>
</div>

<style>
    .chip {
        display: inline-flex;
        align-items: center;
        gap: .5rem;
        padding: .35rem .7rem;
        border-radius: 999px;
        font-size: .875rem
    }

    .chip-muted {
        background: #f1f3f5;
        color: #495057
    }

    .chip-primary {
        background: #e7f1ff;
        color: #0d6efd
    }

    .chip-ghost {
        background: #fff;
        border: 1px solid #e9ecef;
        color: #495057;
        cursor: grab;
        transition: .2s
    }

        .chip-ghost:hover {
            border-color: #0d6efd;
            color: #0d6efd;
            box-shadow: 0 2px 6px rgba(13,110,253,.2)
        }

    .dnd-dropzone.dragover {
        background: linear-gradient(0deg,rgba(13,110,253,.06),rgba(13,110,253,.06))
    }

    .dnd-item .card {
        border: 1px solid #e9ecef;
        border-radius: 1rem;
        transition: .2s
    }

        .dnd-item .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,.08)
        }

    .dnd-item .card-body {
        padding: 1rem
    }

    .dnd-item .fw-semibold {
        font-size: 1rem;
        color: #212529
    }

    .dnd-remove {
        opacity: .7;
        transition: .2s
    }

        .dnd-remove:hover {
            opacity: 1;
            color: #dc3545 !important
        }

    .qty-input {
        max-width: 90px
    }
</style>

<script>
    // ---------- Tiny DnD mockup ----------
    (function(){
      const catalog = document.getElementById('mf_catalog');
      const deck    = document.getElementById('unitDeck');
      const totalsI = document.getElementById('mf_total_items');
      const totalsQ = document.getElementById('mf_total_qty');
      const search  = document.getElementById('mf_search');

      let dragData = null;

      function updateTotals(){
        const cards = deck.querySelectorAll('.dnd-item');
        totalsI.textContent = cards.length;
        let sum = 0;
        cards.forEach(c=>{
          const q = c.querySelector('.qty-input');
          sum += Number(q?.value || 0);
        });
        totalsQ.textContent = sum;
      }

      function makeCard({id,name,qty=1}){
        const col = document.createElement('div');
        col.className = 'col-12 col-md-6 col-xxl-4 dnd-item';
        col.setAttribute('draggable','true');
        col.dataset.id = id;

        col.innerHTML = `
          <div class="card h-100 shadow-sm">
            <div class="card-body d-flex flex-column gap-2">
              <div class="d-flex justify-content-between align-items-start">
                <div class="fw-semibold">${name}</div>
                <button class="btn btn-sm btn-link text-danger p-0 dnd-remove" title="Remove"><i class="bi bi-trash"></i></button>
              </div>
              <div class="mt-auto">
                <label class="small text-muted mb-1">Qty</label>
                <input type="number" class="form-control form-control-sm qty-input" min="0" step="1" value="${qty}">
              </div>
            </div>
          </div>
        `;
        // Card drag
        col.addEventListener('dragstart', e=>{
          col.classList.add('dragging');
          dragData = {type:'reorder', el: col};
        });
        col.addEventListener('dragend', ()=>{
          col.classList.remove('dragging');
          dragData = null;
        });
        return col;
      }

      // Catalog: start drag or double-click to add
      catalog.addEventListener('dragstart', e=>{
        const chip = e.target.closest('.dnd-src');
        if(!chip) return;
        dragData = {type:'add', id: chip.dataset.id, name: chip.dataset.name};
        e.dataTransfer.setData('text/plain', chip.dataset.id);
      });
      catalog.addEventListener('dragend', ()=> dragData = null);

      catalog.addEventListener('dblclick', e=>{
        const chip = e.target.closest('.dnd-src'); if(!chip) return;
        if(deck.querySelector(`.dnd-item[data-id="${CSS.escape(chip.dataset.id)}"]`)) return;
        deck.appendChild(makeCard({id: chip.dataset.id, name: chip.dataset.name, qty:1}));
        updateTotals();
      });

      // Deck: allow drop + internal reorder
      deck.addEventListener('dragover', e=>{
        e.preventDefault();
        deck.classList.add('dragover');

        const afterEl = getAfterElement(deck, e.clientY);
        const dragging = deck.querySelector('.dnd-item.dragging');

        if (dragging && afterEl == null) {
          deck.appendChild(dragging);
        } else if (dragging && afterEl) {
          deck.insertBefore(dragging, afterEl);
        }
      });

      deck.addEventListener('dragleave', ()=> deck.classList.remove('dragover'));

      deck.addEventListener('drop', e=>{
        e.preventDefault();
        deck.classList.remove('dragover');
        if(!dragData) return;

        if (dragData.type === 'add') {
          // add new if not exists
          if (deck.querySelector(`.dnd-item[data-id="${CSS.escape(dragData.id)}"]`)) return;
          const card = makeCard({id: dragData.id, name: dragData.name, qty:1});
          const afterEl = getAfterElement(deck, e.clientY);
          if (afterEl == null) deck.appendChild(card);
          else deck.insertBefore(card, afterEl);
          updateTotals();
        }
        // reorder handled in dragover for 'reorder'
      });

      // remove + qty change
      deck.addEventListener('click', e=>{
        const btn = e.target.closest('.dnd-remove');
        if(btn){
          btn.closest('.dnd-item')?.remove();
          updateTotals();
        }
      });
      deck.addEventListener('input', e=>{
        if(e.target.classList.contains('qty-input')) updateTotals();
      });

      // simple filter for catalog
      search?.addEventListener('input', e=>{
        const term = e.target.value.trim().toLowerCase();
        catalog.querySelectorAll('.dnd-src').forEach(chip=>{
          const name = (chip.dataset.name || chip.textContent || '').toLowerCase();
          chip.style.display = name.includes(term) ? '' : 'none';
        });
      });

      function getAfterElement(container, y){
        const els = [...container.querySelectorAll('.dnd-item:not(.dragging)')];
        return els.reduce((closest, child) => {
          const box = child.getBoundingClientRect();
          const offset = y - box.top - box.height / 2;
          if(offset < 0 && offset > closest.offset){
            return {offset, element: child};
          } else {
            return closest;
          }
        }, {offset: Number.NEGATIVE_INFINITY}).element || null;
      }

      // Expose a tiny helper to read current list (for future save)
      window.__mockGetUnitItems = function(){
        return [...deck.querySelectorAll('.dnd-item')].map(card => ({
          id: card.dataset.id,
          name: card.querySelector('.fw-semibold')?.textContent?.trim() || '',
          qty: Number(card.querySelector('.qty-input')?.value || 0)
        }));
      };
    })();
</script>









@section Scripts {
    <link rel="stylesheet" type="text/css" href="~/css/furnitureandunitfurniture.css?ver=@DateTime.Now.Ticks.ToString()">
    <script src="~/js/Pages/FurnitureAndUnitFurniture/FurnitureAndUnitFurniture.js?ver=@DateTime.Now.Ticks.ToString()"></script>
}